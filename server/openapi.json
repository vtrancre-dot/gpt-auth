{
    "openapi": "3.1.0",
    "info": {
      "title": "GPT Auth API",
      "version": "1.0.0",
      "description": "Authentication API for Custom GPTs using OAuth 2.0 with Google."
    },
    "servers": [
      {
        "url": "http://localhost:5000",
        "description": "Local development server"
      }
    ],
    "paths": {
      "/get_greeting": {
        "get": {
          "operationId": "getRandomGreeting",
          "summary": "Get a random greeting",
          "description": "Fetches a random greeting from the API. Requires authentication.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response with a random greeting",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                    "description": "A random greeting message"
                  }
                }
              }
            },
            "400": {
              "description": "Authentication error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                    "description": "Error message"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized - Invalid token",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                    "description": "Authentication error message"
                  }
                }
              }
            }
          }
        }
      },
      "/verify_token/{slug}": {
        "post": {
          "operationId": "verifyToken",
          "summary": "Verify user token",
          "description": "Generates and returns a new access token for the specified admin slug.",
          "parameters": [
            {
              "name": "slug",
              "in": "path",
              "required": true,
              "description": "Admin identifier slug",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Token generated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string",
                        "description": "Generated access token"
                      }
                    },
                    "required": ["access_token"]
                  }
                }
              }
            }
          }
        }
      },
      "/get_credentials": {
        "post": {
          "operationId": "getCredentials",
          "summary": "Get or create admin credentials",
          "description": "Creates new admin credentials or retrieves existing ones.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "googleId": {
                      "type": "string",
                      "description": "Google OAuth Client ID"
                    },
                    "googleSecret": {
                      "type": "string",
                      "description": "Google OAuth Client Secret"
                    },
                    "id": {
                      "type": "string",
                      "description": "Existing admin ID (optional)"
                    }
                  },
                  "required": ["googleId", "googleSecret"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Credentials generated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Client ID"
                      },
                      "secret": {
                        "type": "string",
                        "description": "Client Secret"
                      },
                      "adminId": {
                        "type": "string",
                        "description": "Admin identifier"
                      }
                    },
                    "required": ["id", "secret", "adminId"]
                  }
                }
              }
            }
          }
        }
      },
      "/get_login_url": {
        "get": {
          "operationId": "getLoginUrl",
          "summary": "Get Google OAuth login URL",
          "description": "Retrieves the Google OAuth login URL for a specific admin.",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "required": true,
              "description": "Admin ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Login URL retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                    "description": "Google OAuth login URL"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Error": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32"
            },
            "message": {
              "type": "string"
            }
          }
        }
      },
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT",
          "description": "Bearer token authentication using access tokens"
        }
      }
    },
    "security": [
      {
        "bearerAuth": []
      }
    ]
  }